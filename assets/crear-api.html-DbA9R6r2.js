import{_ as l,r as t,o,c as r,a,e,b as s,d as i}from"./app-114A1ieC.js";const c={},p=i(`<h1 id="crear-una-api-publica-con-laravel-y-utilizar-un-dashboard-de-filamentphp-para-cargar-los-datos" tabindex="-1"><a class="header-anchor" href="#crear-una-api-publica-con-laravel-y-utilizar-un-dashboard-de-filamentphp-para-cargar-los-datos"><span>Crear una API pública con Laravel y utilizar un dashboard de FilamentPHP para cargar los datos</span></a></h1><p>Para crear una API pública con Laravel y utilizar un dashboard de <code>FilamentPHP</code> para cargar los datos, podemos los siguientes pasos generales, adaptándolos a las necesidades concretas de cada proyecto:</p><h2 id="instalacion-y-configuracion-inicial" tabindex="-1"><a class="header-anchor" href="#instalacion-y-configuracion-inicial"><span>Instalación y configuración inicial</span></a></h2><p>Instalar Laravel a través de Composer con el comando:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">composer</span> create-project laravel/laravel nombre-proyecto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Comprobamos que tenemos intl activado:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php <span class="token parameter variable">-m</span> <span class="token operator">|</span> <span class="token function">grep</span> intl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Si no devuelve nada, lo activamos:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> php-intl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Una vez instalado, al ejecutar:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php <span class="token parameter variable">-m</span> <span class="token operator">|</span> <span class="token function">grep</span> intl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Debería devolver algo así como:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>intl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="instalacion-de-filamentphp" tabindex="-1"><a class="header-anchor" href="#instalacion-de-filamentphp"><span>Instalación de FilamentPHP</span></a></h3><p>Instalar FilamentPHP con Composer usando <code>composer require filament/filament</code> seguido de la versión a instalar en el directorio del proyecto Laravel:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> nombre-proyecto

<span class="token function">composer</span> require filament/filament:<span class="token string">&quot;^3.2&quot;</span> <span class="token parameter variable">-W</span>

php artisan filament:install <span class="token parameter variable">--panels</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),d={href:"https://filamentphp.com/docs/3.x/panels/installation",target:"_blank",rel:"noopener noreferrer"},u=i(`<h3 id="configuracion" tabindex="-1"><a class="header-anchor" href="#configuracion"><span>Configuración</span></a></h3><p>Configurar el entorno de desarrollo en <code>.env</code> con las credenciales de la base de datos y otros ajustes necesarios.</p><p>Para cambiar el nombre de la base de datos, iremos a la línea:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>DB_DATABASE=my_database
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y realizamos las migraciones:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Creamos el usuario del panel de control:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan make:filament-user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ejecutar-el-servidor-de-desarrollo" tabindex="-1"><a class="header-anchor" href="#ejecutar-el-servidor-de-desarrollo"><span>Ejecutar el servidor de desarrollo</span></a></h3><p>Para comprobar que todo ha funcionado bien, podemos lanzar el servidor de desarrollo con:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Que, por defecto, nos lanzará un servidor de desarrollo en:</p>`,12),m={href:"http://127.0.0.1:8000/",target:"_blank",rel:"noopener noreferrer"},v=a("p",null,"Y el acceso al panel de control a través de:",-1),h={href:"http://127.0.0.1:8000/admin/login",target:"_blank",rel:"noopener noreferrer"},b=i(`<h2 id="estructura-de-directorios" tabindex="-1"><a class="header-anchor" href="#estructura-de-directorios"><span>Estructura de directorios</span></a></h2><p>Para mantener la estructura de directorios predeterminada de Laravel para las APIs, debemos crear un controlador para manejar la lógica de las rutas de API.</p><p>En la terminal, en el directorio raíz del proyecto Laravel, ejecutamos el siguiente comando Artisan para crear un controlador llamado TestNewsController:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan make:controller TestNewsController
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Este comando generará un nuevo archivo en el directorio <code>app/Http/Controllers</code> llamado <code>TestNewsController.php</code>.</p><p>Abrimos el archivo <code>TestNewsController.php</code> recién creado y dentro de él, definimos el método <code>index()</code> que será responsable de manejar la lógica para obtener los artículos de <code>test_news</code> y devolverlos como JSON:</p><div class="language-PHP line-numbers-mode" data-ext="PHP" data-title="PHP"><pre class="language-PHP"><code>namespace App\\Http\\Controllers;

use Illuminate\\Http\\Request;
use App\\Models\\TestNews;

class TestNewsController extends Controller
{
    public function index()
    {
        $testNews = TestNews::all();
        return response()-&gt;json($testNews);
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),g={href:"http://127.0.0.1:8000/api/v1/test-news/",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="mejoras" tabindex="-1"><a class="header-anchor" href="#mejoras"><span>Mejoras</span></a></h2><h3 id="hacer-visibles-las-imagenes" tabindex="-1"><a class="header-anchor" href="#hacer-visibles-las-imagenes"><span>Hacer visibles las imágenes</span></a></h3><p>Si subimos imágenes, comprobamos su nombre accediendo a la API y las buscamos con find:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-iname</span> 01HWDWYZE4H77118EY8X2HMZ2N.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Que devolverá algo como:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./storage/app/public/01HWDWYZE4H77118EY8X2HMZ2N.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Si funciona bien la subida de imágenes, deberemos crear un enlace simbólico con:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan storage:link
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Que devolverá algo como:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>   INFO  The <span class="token punctuation">[</span>public/storage<span class="token punctuation">]</span> <span class="token function">link</span> has been connected to <span class="token punctuation">[</span>storage/app/public<span class="token punctuation">]</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Por lo que podremos acceder a esa imagen con la ruta <code>http://127.0.0.1:8000/storage/01HWDWYZE4H77118EY8X2HMZ2N.jpg</code>.</p><h3 id="crear-la-url-en-la-api" tabindex="-1"><a class="header-anchor" href="#crear-la-url-en-la-api"><span>Crear la URL en la API</span></a></h3><p>Para construir la URL en la API, editaremos el fichero <code>Http/Controllers/TestNewsController.php</code> añadiendo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$modifiedData</span> <span class="token operator">=</span> <span class="token variable">$testNews</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">image_url</span> <span class="token operator">=</span> <span class="token function">asset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;storage/&#39;</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">image</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token variable">$item</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Por lo que el fichero quedaría algo así:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>TestNews</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">TestNewsController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$testNews</span> <span class="token operator">=</span> <span class="token class-name static-context">TestNews</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$modifiedData</span> <span class="token operator">=</span> <span class="token variable">$testNews</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">image_url</span> <span class="token operator">=</span> <span class="token function">asset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;storage/&#39;</span> <span class="token operator">.</span> <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">image</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Construir la URL completa de la imagen</span>
            <span class="token keyword">return</span> <span class="token variable">$item</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$testNews</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Este controlador, primero obtiene todos los datos de <code>TestNews</code>. Luego, utiliza el método <code>map</code> para iterar sobre cada elemento y agregar una nueva propiedad <code>image_url</code> que contiene la URL completa de la imagen construida utilizando la función <code>asset</code> de Laravel.</p><h3 id="autenticacion" tabindex="-1"><a class="header-anchor" href="#autenticacion"><span>Autenticación</span></a></h3><p>Si la API requiere autenticación, considerar usar <code>Laravel Sanctum </code>o <code>Passport</code> para manejar tokens de acceso.</p><h3 id="paquetes-adicionales" tabindex="-1"><a class="header-anchor" href="#paquetes-adicionales"><span>Paquetes adicionales</span></a></h3><p>Instalar paquetes útiles como <code>laravel/telescope</code> para depuración y <code>spatie/laravel-query-builder</code> para facilitar la creación de consultas API.</p><h3 id="pruebas-y-documentacion" tabindex="-1"><a class="header-anchor" href="#pruebas-y-documentacion"><span>Pruebas y documentación</span></a></h3><p>Escribir pruebas con <code>PHPUnit</code> para asegurar que la API funciona correctamente.</p><p>Documentar la API con herramientas como <code>Swagger</code> o <code>Postman</code>.</p><h2 id="despliegue" tabindex="-1"><a class="header-anchor" href="#despliegue"><span>Despliegue</span></a></h2><p>Preparar la aplicación para producción con:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>php artisan optimize
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Desplegar la aplicación en un servidor o plataforma de hosting que soporte Laravel.</p>`,28);function f(P,x){const n=t("ExternalLinkIcon");return o(),r("div",null,[p,a("p",null,[e("Para comprobar la última versión disponible, podemos ir a la "),a("a",d,[e("documentación de FilamentPHP"),s(n)]),e(".")]),u,a("p",null,[a("a",m,[e("http://127.0.0.1:8000/"),s(n)])]),v,a("p",null,[a("a",h,[e("http://127.0.0.1:8000/admin/login"),s(n)])]),b,a("p",null,[e("Ahora, podemos acceder a la API con "),a("a",g,[e("http://127.0.0.1:8000/api/v1/test-news/"),s(n)]),e(".")]),k])}const _=l(c,[["render",f],["__file","crear-api.html.vue"]]),w=JSON.parse('{"path":"/laravel/crear-api.html","title":"Crear una API pública con Laravel y utilizar un dashboard de FilamentPHP para cargar los datos","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Instalación y configuración inicial","slug":"instalacion-y-configuracion-inicial","link":"#instalacion-y-configuracion-inicial","children":[{"level":3,"title":"Instalación de FilamentPHP","slug":"instalacion-de-filamentphp","link":"#instalacion-de-filamentphp","children":[]},{"level":3,"title":"Configuración","slug":"configuracion","link":"#configuracion","children":[]},{"level":3,"title":"Ejecutar el servidor de desarrollo","slug":"ejecutar-el-servidor-de-desarrollo","link":"#ejecutar-el-servidor-de-desarrollo","children":[]}]},{"level":2,"title":"Estructura de directorios","slug":"estructura-de-directorios","link":"#estructura-de-directorios","children":[]},{"level":2,"title":"Mejoras","slug":"mejoras","link":"#mejoras","children":[{"level":3,"title":"Hacer visibles las imágenes","slug":"hacer-visibles-las-imagenes","link":"#hacer-visibles-las-imagenes","children":[]},{"level":3,"title":"Crear la URL en la API","slug":"crear-la-url-en-la-api","link":"#crear-la-url-en-la-api","children":[]},{"level":3,"title":"Autenticación","slug":"autenticacion","link":"#autenticacion","children":[]},{"level":3,"title":"Paquetes adicionales","slug":"paquetes-adicionales","link":"#paquetes-adicionales","children":[]},{"level":3,"title":"Pruebas y documentación","slug":"pruebas-y-documentacion","link":"#pruebas-y-documentacion","children":[]}]},{"level":2,"title":"Despliegue","slug":"despliegue","link":"#despliegue","children":[]}],"git":{"updatedTime":1714899027000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":3}]},"filePathRelative":"laravel/crear-api.md"}');export{_ as comp,w as data};
