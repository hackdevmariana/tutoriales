import{_ as e,o as a,c as n,d as s}from"./app-BJQRV7if.js";const i={},c=s(`<h1 id="ciclo-while" tabindex="-1"><a class="header-anchor" href="#ciclo-while"><span>Ciclo while</span></a></h1><p>El bucle <code>while</code> en Javascript es una estructura de control que permite repetir la ejecución de un bloque de código mientras se cumpla una condición específica. Es decir, el bucle <code>while</code> continúa ejecutándose hasta que la condición evaluada se vuelva falsa.</p><p>La sintaxis general del bucle <code>while</code> es la siguiente:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>condicion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// código a ejecutar mientras la condición sea verdadera</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La condición puede ser cualquier expresión que devuelva un valor booleano. El código dentro del bucle se ejecuta mientras la condición sea verdadera. Si la condición es falsa desde el inicio, el bucle no se ejecuta ni una sola vez.</p><p>Por ejemplo, el siguiente bucle imprime los números del 1 al 10:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// inicializamos la variable de control</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// mientras i sea menor o igual que 10</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mostramos el valor de i</span>
  i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// incrementamos i en uno</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ciclo-do-while" tabindex="-1"><a class="header-anchor" href="#ciclo-do-while"><span>Ciclo do-while</span></a></h2><p>El bucle do-while en Javascript es una variante del bucle while que ejecuta el bloque de código al menos una vez, y luego repite la ejecución mientras la condición sea verdadera. Es decir, el bucle do-while evalúa la condición después de cada iteración, en lugar de antes.</p><p>La sintaxis general del bucle do-while es la siguiente:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>
  <span class="token comment">// código a ejecutar al menos una vez y mientras la condición sea verdadera</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>condicion<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La condición puede ser cualquier expresión que devuelva un valor booleano. El código dentro del bucle se ejecuta una vez, y luego se vuelve a ejecutar mientras la condición sea verdadera. Si la condición es falsa desde el inicio, el bucle se ejecuta solo una vez.</p><p>Por ejemplo, el siguiente bucle imprime los números del 10 al 1 en orden descendente:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// inicializamos la variable de control</span>
<span class="token keyword">do</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mostramos el valor de i</span>
  i<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// decrementamos i en uno</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mientras i sea mayor o igual que 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="diferencias" tabindex="-1"><a class="header-anchor" href="#diferencias"><span>Diferencias</span></a></h2><p>La diferencia entre <code>while</code> y <code>do-while</code> es que el bucle <code>while</code> evalúa la condición antes de ejecutar el código, mientras que el bucle <code>do-while</code> ejecuta el código al menos una vez y luego evalúa la condición. Por ejemplo, si la condición es falsa desde el principio, el bucle <code>while</code> no se ejecuta ni una sola vez, pero el bucle <code>do-while</code> se ejecuta una vez.</p>`,16),l=[c];function o(t,p){return a(),n("div",null,l)}const u=e(i,[["render",o],["__file","while.html.vue"]]),r=JSON.parse('{"path":"/javascript/while.html","title":"Ciclo while","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Ciclo do-while","slug":"ciclo-do-while","link":"#ciclo-do-while","children":[]},{"level":2,"title":"Diferencias","slug":"diferencias","link":"#diferencias","children":[]}],"git":{"updatedTime":1709123345000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"javascript/while.md"}');export{u as comp,r as data};
