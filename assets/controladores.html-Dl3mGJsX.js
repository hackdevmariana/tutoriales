import{_ as n,o as s,c as a,d as e}from"./app-jyO6TWh3.js";const t={},o=e(`<h1 id="controladores" tabindex="-1"><a class="header-anchor" href="#controladores"><span>Controladores</span></a></h1><p>Los controladores en Laravel son clases que manejan las solicitudes HTTP y contienen la lógica de la aplicación.</p><p>Proporcionan un punto centralizado para organizar y manejar la lógica de la aplicación relacionada con un conjunto específico de rutas. Los controladores se encargan de procesar las solicitudes entrantes, interactuar con los modelos para recuperar o modificar datos y devolver una respuesta adecuada al cliente.</p><p>Se almacenan en <code>app/Http/Controllers</code>.</p><p>Creación:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>controller UserController
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Se invoca desde las vistas con:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>UserController</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">UserController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="caracteristicas-clave-de-los-controladores-en-laravel" tabindex="-1"><a class="header-anchor" href="#caracteristicas-clave-de-los-controladores-en-laravel"><span>Características clave de los controladores en Laravel</span></a></h2><ul><li><p><strong>Métodos de acción</strong>: Los controladores contienen métodos de acción que definen cómo responder a diferentes tipos de solicitudes HTTP (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, etc.). Cada método de acción generalmente corresponde a una ruta en el archivo de rutas de Laravel.</p></li><li><p><strong>Interacción con modelos</strong>: Los controladores a menudo interactúan con los modelos para recuperar datos de la base de datos, actualizarlos o eliminarlos según sea necesario. Esto ayuda a mantener separada la lógica de la aplicación de la capa de presentación.</p></li><li><p><strong>Lógica de la aplicación</strong>: Los controladores encapsulan la lógica de la aplicación, lo que facilita la reutilización del código y el mantenimiento de la aplicación. La lógica relacionada con la autenticación, la validación de formularios, la autorización y otros aspectos de la aplicación se puede centralizar en los controladores.</p></li><li><p><strong>Respuestas HTTP</strong>: Los controladores devuelven respuestas HTTP al cliente, que pueden ser vistas renderizadas, redirecciones, respuestas JSON u otro tipo de respuesta según sea necesario.</p></li></ul><h2 id="ejemplo-simple-de-un-controlador-en-laravel" tabindex="-1"><a class="header-anchor" href="#ejemplo-simple-de-un-controlador-en-laravel"><span>Ejemplo simple de un controlador en Laravel</span></a></h2><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.index&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;users&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$users</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.show&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$user</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Validar los datos del formulario</span>
        <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required|email|unique:users&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required|min:8&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Crear un nuevo usuario</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>
        <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">email</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">email</span><span class="token punctuation">;</span>
        <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">=</span> <span class="token function">bcrypt</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Redireccionar a la página de perfil del usuario</span>
        <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.show&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Otros métodos de acción como update() y destroy() también se pueden definir aquí</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este ejemplo, el controlador <code>UserController</code> maneja las solicitudes relacionadas con los usuarios. Tiene métodos de acción como <code>index()</code> para mostrar una lista de usuarios, <code>show()</code> para mostrar un usuario específico y <code>store()</code> para almacenar un nuevo usuario en la base de datos.</p>`,13),p=[o];function l(c,i){return s(),a("div",null,p)}const u=n(t,[["render",l],["__file","controladores.html.vue"]]),d=JSON.parse('{"path":"/laravel/controladores.html","title":"Controladores","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Características clave de los controladores en Laravel","slug":"caracteristicas-clave-de-los-controladores-en-laravel","link":"#caracteristicas-clave-de-los-controladores-en-laravel","children":[]},{"level":2,"title":"Ejemplo simple de un controlador en Laravel","slug":"ejemplo-simple-de-un-controlador-en-laravel","link":"#ejemplo-simple-de-un-controlador-en-laravel","children":[]}],"git":{"updatedTime":1715036632000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"laravel/controladores.md"}');export{u as comp,d as data};
