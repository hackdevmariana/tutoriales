import{_ as a,o as s,c as n,d as e}from"./app-iqW588Fi.js";const t={},p=e(`<h1 id="introduccion-a-blade" tabindex="-1"><a class="header-anchor" href="#introduccion-a-blade"><span>Introducción a Blade</span></a></h1><p>Blade es el motor de plantillas nativo de Laravel, diseñado para facilitar la creación de vistas en aplicaciones web.</p><p>Algunas de sus características principales son:</p><p><strong>Sintaxis Sencilla y Limpia</strong></p><p>Blade permite mezclar código PHP con HTML de manera intuitiva.</p><p>Por ejemplo, para mostrar una variable, simplemente usamos dobles llaves (<code>{{}}</code>):</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">$variable</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Directivas de Blade</strong></p><p>Blade incluye varias directivas que simplifican tareas comunes, como:</p><ul><li><p><code>@if</code>, <code>@elseif</code>, <code>@else</code>, <code>@endif</code> para condiciones.</p></li><li><p><code>@foreach</code>, <code>@for</code>, <code>@while</code> para bucles.</p></li><li><p><code>@include</code> para incluir otras vistas.</p></li><li><p><code>@extends</code> y <code>@section</code> para herencia de plantillas.</p></li></ul><p><strong>Herencia de plantillas</strong></p><p>Podemos definir una plantilla base y extenderla en otras vistas, lo que facilita la reutilización de código.</p><p>Por ejemplo, podemos hacer la plantilla base (<code>layouts/app.blade.php</code>):</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>App Name <span class="token operator">-</span> @<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
    @<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Y una vista que extiende la plantilla (<code>home.blade.php</code>):</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>@<span class="token keyword">extends</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;layouts.app&#39;</span><span class="token punctuation">)</span>

@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Home Page&#39;</span><span class="token punctuation">)</span>

@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Welcome to the Home Page<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
@endsection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Componentes y slots</strong></p><p>Blade permite crear componentes reutilizables y pasarles datos.</p><p>Por ejemplo, podemos crear un componente <code>components/alert.blade.php</code>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;alert alert-{{ <span class="token interpolation"><span class="token variable">$type</span></span> }}&quot;</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">$slot</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Uso del componente:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">&lt;</span>x<span class="token operator">-</span>alert type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;danger&quot;</span><span class="token operator">&gt;</span>
  This is an error message<span class="token operator">.</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>x<span class="token operator">-</span>alert<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[p];function l(i,c){return s(),n("div",null,o)}const d=a(t,[["render",l],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/laravel/blade/","title":"Introducción a Blade","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"laravel/blade/README.md"}');export{d as comp,u as data};
