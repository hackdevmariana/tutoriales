import{_ as n,o as a,c as s,d as t}from"./app-D-GMBQoF.js";const e={},p=t(`<h1 id="convertir-una-imagen-a-formato-vectorial" tabindex="-1"><a class="header-anchor" href="#convertir-una-imagen-a-formato-vectorial"><span>Convertir una imagen a formato vectorial</span></a></h1><p>La conversión de una imagen en formato raster (como JPEG o PNG) a un formato vectorial (como SVG) no es una tarea directa, ya que las imágenes raster y vectoriales representan información de manera muy diferente.</p><p>Las imágenes raster están compuestas por píxeles, mientras que las imágenes vectoriales se componen de formas geométricas y se almacenan como descripciones de esas formas.</p><p>Sin embargo, hay algunas bibliotecas y herramientas que pueden ayudar a realizar una aproximación a la vectorización.</p><p>Una de las bibliotecas populares para esta tarea en Python es <code>Potrace</code>, que es una interfaz para la biblioteca de trazado de potenciales (Potrace). Potrace convierte imágenes bitmap en gráficos vectoriales.</p><p>Podemos usar la biblioteca <code>potrace</code> junto con otras bibliotecas de manejo de imágenes como <code>PIL</code> (Pillow) para lograr esto.</p><p>Primero, debemos instalar <code>potrace</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> potrace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y convertir las imágenes raster en vectorial:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> potrace

<span class="token keyword">def</span> <span class="token function">convert_to_svg</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span>
    bitmap <span class="token operator">=</span> potrace<span class="token punctuation">.</span>Bitmap<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    path <span class="token operator">=</span> bitmap<span class="token punctuation">.</span>trace<span class="token punctuation">(</span><span class="token punctuation">)</span>
    path<span class="token punctuation">.</span>to_svg<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    convert_to_svg<span class="token punctuation">(</span><span class="token string">&quot;input_image.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;output_image.svg&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modulo-autotrace" tabindex="-1"><a class="header-anchor" href="#modulo-autotrace"><span>Módulo autotrace</span></a></h2><p>O el módulo <code>autotrace</code>, que es más sencillo:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> autotrace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ejemplo de uso:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> autotrace

<span class="token keyword">def</span> <span class="token function">vectorize_image</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    autotrace<span class="token punctuation">.</span>svg<span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    vectorize_image<span class="token punctuation">(</span><span class="token string">&#39;input_image.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output_image.svg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modulo-cairosvg" tabindex="-1"><a class="header-anchor" href="#modulo-cairosvg"><span>Módulo CairoSVG</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> cairosvg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ejemplo de uso:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cairosvg

<span class="token keyword">def</span> <span class="token function">vectorize_image</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cairosvg<span class="token punctuation">.</span>svg2svg<span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    vectorize_image<span class="token punctuation">(</span><span class="token string">&#39;input_image.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output_image.svg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modulo-svgwrite-y-pillow" tabindex="-1"><a class="header-anchor" href="#modulo-svgwrite-y-pillow"><span>Módulo SVGwrite y PILLOW</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pillow svgwrite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ejemplo de uso:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> svgwrite

<span class="token keyword">def</span> <span class="token function">vectorize_image</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">)</span>
    dwg <span class="token operator">=</span> svgwrite<span class="token punctuation">.</span>Drawing<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    dwg<span class="token punctuation">.</span>add<span class="token punctuation">(</span>dwg<span class="token punctuation">.</span>image<span class="token punctuation">(</span>img<span class="token punctuation">.</span>size<span class="token punctuation">,</span> img<span class="token punctuation">.</span>tobytes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    dwg<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    vectorize_image<span class="token punctuation">(</span><span class="token string">&#39;input_image.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output_image.svg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>O:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> svgwrite

<span class="token keyword">def</span> <span class="token function">vectorize_image</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">)</span>
    svg <span class="token operator">=</span> svgwrite<span class="token punctuation">.</span>Drawing<span class="token punctuation">(</span>output_path<span class="token punctuation">,</span> profile<span class="token operator">=</span><span class="token string">&#39;tiny&#39;</span><span class="token punctuation">)</span>
    width<span class="token punctuation">,</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>size
    svg<span class="token punctuation">.</span>add<span class="token punctuation">(</span>svg<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>insert<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>
            pixel <span class="token operator">=</span> image<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
            svg<span class="token punctuation">.</span>add<span class="token punctuation">(</span>svg<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>insert<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;rgb</span><span class="token interpolation"><span class="token punctuation">{</span>pixel<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    svg<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    vectorize_image<span class="token punctuation">(</span><span class="token string">&#39;input_image.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output_image.svg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[p];function i(c,l){return a(),s("div",null,o)}const r=n(e,[["render",i],["__file","convertir-a-vectorial.html.vue"]]),d=JSON.parse('{"path":"/python/convertir-a-vectorial.html","title":"Convertir una imagen a formato vectorial","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Módulo autotrace","slug":"modulo-autotrace","link":"#modulo-autotrace","children":[]},{"level":2,"title":"Módulo CairoSVG","slug":"modulo-cairosvg","link":"#modulo-cairosvg","children":[]},{"level":2,"title":"Módulo SVGwrite y PILLOW","slug":"modulo-svgwrite-y-pillow","link":"#modulo-svgwrite-y-pillow","children":[]}],"git":{"updatedTime":1709901862000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"python/convertir-a-vectorial.md"}');export{r as comp,d as data};
