import{_ as n,o as a,c as s,e}from"./app-DKNG26Vz.js";const c={},o=e(`<h1 id="cli-con-click" tabindex="-1"><a class="header-anchor" href="#cli-con-click"><span>CLI con click</span></a></h1><h2 id="instalacion" tabindex="-1"><a class="header-anchor" href="#instalacion"><span>Instalación</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> click
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="comando-sin-subcomandos" tabindex="-1"><a class="header-anchor" href="#comando-sin-subcomandos"><span>Comando sin subcomandos</span></a></h2><p>Es posible crear un CLI con <code>Click</code> que se ejecute directamente sin mostrar la ayuda al escribir el nombre del script.</p><p>Podemos hacer esto utilizando un comando principal que se ejecute automáticamente cuando no se proporciona un subcomando, al estilo de cualquier comando clásico de Unix, como <code>ls</code>, <code>cd</code> o <code>mkdir</code>.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> click

<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>group</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>argument</span><span class="token punctuation">(</span><span class="token string">&#39;parametro&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">comando</span><span class="token punctuation">(</span>parametro<span class="token punctuation">)</span><span class="token punctuation">:</span>
    click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Ejecutando comando con parámetro: </span><span class="token interpolation"><span class="token punctuation">{</span>parametro<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    cli<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Para ejecutarlo, escribiríamos en la consola:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python script.py valor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),t=[o];function i(l,p){return a(),s("div",null,t)}const r=n(c,[["render",i],["__file","click.html.vue"]]),u=JSON.parse('{"path":"/python/click.html","title":"CLI con click","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Instalación","slug":"instalacion","link":"#instalacion","children":[]},{"level":2,"title":"Comando sin subcomandos","slug":"comando-sin-subcomandos","link":"#comando-sin-subcomandos","children":[]}],"git":{"updatedTime":1708778239000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":2}]},"filePathRelative":"python/click.md"}');export{r as comp,u as data};
