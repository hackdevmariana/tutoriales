import{_ as s,o as n,c as a,d as e}from"./app-ClqmKPru.js";const p={},t=e(`<h1 id="guzzle" tabindex="-1"><a class="header-anchor" href="#guzzle"><span>Guzzle</span></a></h1><p><code>Guzzle</code> es una biblioteca <code>HTTP</code> para PHP que facilita el envío de solicitudes HTTP y la integración con <code>APIs</code>. Es muy útil para hacer web scraping debido a su simplicidad y flexibilidad.</p><p>Para usar Guzzle, primero, necesitamos instalar el paquete usando Composer.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">composer</span> require guzzlehttp/guzzle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ejemplo-de-web-scraping-con-guzzle" tabindex="-1"><a class="header-anchor" href="#ejemplo-de-web-scraping-con-guzzle"><span>Ejemplo de Web Scraping con Guzzle</span></a></h2><p>Utilizaremos Guzzle para enviar una solicitud GET a la página web que deseamos scrapear.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">require</span> <span class="token string single-quoted-string">&#39;vendor/autoload.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">GuzzleHttp<span class="token punctuation">\\</span>Client</span><span class="token punctuation">;</span>

<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;https://ejemplo.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$html</span> <span class="token operator">=</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Podemos usar una biblioteca como simple_html_dom para parsear el HTML y extraer los datos que necesitas.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;simple_html_dom.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$htmlDom</span> <span class="token operator">=</span> <span class="token function">str_get_html</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$htmlDom</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;div.classname&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">echo</span> <span class="token variable">$element</span><span class="token operator">-&gt;</span><span class="token property">plaintext</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Si necesitamos usar proxies para evitar bloqueos, podemos configurarlos en Guzzle:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;https://ejemplo.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
<span class="token string single-quoted-string">&#39;proxy&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;http://usuario:contraseña@proxy.com:8080&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[t];function l(i,c){return n(),a("div",null,o)}const u=s(p,[["render",l],["__file","guzzle.html.vue"]]),d=JSON.parse('{"path":"/php/guzzle.html","title":"Guzzle","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Ejemplo de Web Scraping con Guzzle","slug":"ejemplo-de-web-scraping-con-guzzle","link":"#ejemplo-de-web-scraping-con-guzzle","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"php/guzzle.md"}');export{u as comp,d as data};
