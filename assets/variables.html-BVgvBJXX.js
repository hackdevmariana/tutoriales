import{_ as a,o as s,c as n,d as e}from"./app-DPMNRTwY.js";const t={},p=e(`<h1 id="variables-en-blade" tabindex="-1"><a class="header-anchor" href="#variables-en-blade"><span>Variables en Blade</span></a></h1><p>Para recibir y utilizar variables en una vista Blade en Laravel, podemos seguir estos pasos:</p><ol><li>Pasar variables desde el controlador:</li></ol><p>Desde un controlador podemos pasar variables a la vista utilizando el método <code>with</code> o pasando un array de datos al método <code>view</code>.</p><h4 id="usando-el-metodo-with" tabindex="-1"><a class="header-anchor" href="#usando-el-metodo-with"><span>Usando el método with</span></a></h4><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nombre_de_la_vista&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;variable&#39;</span><span class="token punctuation">,</span> <span class="token variable">$valor</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="pasando-un-array-de-datos" tabindex="-1"><a class="header-anchor" href="#pasando-un-array-de-datos"><span>Pasando un array de datos</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nombre_de_la_vista&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;variable&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$valor</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Acceder a las variables en la vista Blade</li></ol><p>Una vez que las variables se han pasado a la vista, podemos acceder a ellas directamente utilizando la sintaxis de Blade.</p><p>Por ejemplo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Mostrar el valor de la variable <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">$variable</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Usar la variable en una estructura de control <span class="token operator">--</span><span class="token operator">&gt;</span>
@<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$variable</span><span class="token punctuation">)</span>
  <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>La variable tiene un valor<span class="token operator">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
@<span class="token keyword">else</span>
  <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>La variable está vacía<span class="token operator">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
@<span class="token keyword">endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Declarar variables dentro de la vista Blade</li></ol><p>Aunque no es una práctica recomendada, podemos declarar variables directamente dentro de una vista Blade utilizando la directiva <code>@php</code>.</p><p>Por ejemplo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>@<span class="token class-name type-declaration">php</span>
  <span class="token variable">$nombre</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Copilot&#39;</span><span class="token punctuation">;</span>
@endphp

<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Hola<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">$nombre</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[p];function l(r,i){return s(),n("div",null,o)}const d=a(t,[["render",l],["__file","variables.html.vue"]]),u=JSON.parse('{"path":"/laravel/blade/variables.html","title":"Variables en Blade","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Pasando un array de datos","slug":"pasando-un-array-de-datos","link":"#pasando-un-array-de-datos","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"laravel/blade/variables.md"}');export{d as comp,u as data};
