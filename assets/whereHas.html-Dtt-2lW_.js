import{_ as n,o as a,c as s,d as e}from"./app-QU-JfZW_.js";const o={},t=e(`<h1 id="consultas-a-un-modelo-indicando-una-relacion-condicion-en-otro-modelo" tabindex="-1"><a class="header-anchor" href="#consultas-a-un-modelo-indicando-una-relacion-condicion-en-otro-modelo"><span>Consultas a un modelo indicando una relación (condición en otro modelo)</span></a></h1><p>Es muy habitual cuando programamos una aplicación que necesitemos filtrar resultados basados en condiciones en relaciones. Para ello, <code>Eloquent</code> ofrece <code>whereHas</code>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$items</span> <span class="token operator">=</span> <span class="token class-name static-context">ClothingItem</span><span class="token operator">::</span><span class="token function">whereHas</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;types&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Elegant&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este ejemplo, <code>whereHas</code> filtra los <code>ClothingItem</code> que tienen al menos una relación con types donde el nombre sea &quot;Elegant&quot;.</p>`,4),c=[t];function l(p,i){return a(),s("div",null,c)}const u=n(o,[["render",l],["__file","whereHas.html.vue"]]),d=JSON.parse('{"path":"/laravel/eloquent/whereHas.html","title":"Consultas a un modelo indicando una relación (condición en otro modelo)","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"laravel/eloquent/whereHas.md"}');export{u as comp,d as data};
