import{_ as e,r as t,o as p,c as o,a as n,e as s,b as l,d as c}from"./app-LkGzkEJz.js";const i={},u=n("h1",{id:"envio-de-correos-en-filamentphp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#envio-de-correos-en-filamentphp"},[n("span",null,"Envío de correos en FilamentPHP")])],-1),r={href:"https://www.mailgun.com/es/",target:"_blank",rel:"noopener noreferrer"},d=c(`<p>Daremos de alta el correo donde vamos a recibir los correos en &quot;Authorized Recipients&quot;.</p><p>Una vez conseguidos los credenciales, necesitamos configurar Mailgun en la aplicación Laravel. Abrimos el archivo <code>.env</code> y configuramos las siguientes variables de entorno con las credenciales proporcionadas por Mailgun:</p><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><pre class="language-txt"><code>MAIL_MAILER=smtp
MAIL_HOST=smtp.mailgun.org
MAIL_PORT=587
MAIL_USERNAME=your-mailgun-smtp-username
MAIL_PASSWORD=your-mailgun-smtp-password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=your-email-address
MAIL_FROM_NAME=&quot;\${APP_NAME}&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Una vez configurado <code>.env</code>, creamos una <code>Mailable</code>. Una Mailable es una clase que representa un correo electrónico en Laravel. Podemos generar una Mailable utilizando el comando Artisan:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>mail AlertMail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Esto creará una nueva clase <code>AlertMail</code> en el directorio <code>app/Mail</code> (<code>app/Mail/AlertMail.php</code>). Dentro de esta clase, podemos personalizar el contenido del correo electrónico que se enviará. Por defecto:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Content</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Content</span><span class="token punctuation">(</span>
        <span class="token argument-name">view</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;view.name&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Esto enviaría por correo la plantilla <code>resources/views/name.blade.php</code>, que no existe por defecto.</p><p>Podemos crear <code>resources/views/mail/alert.blade.php</code> y configurar ahí la plantilla.</p><p>Creamos el directorio:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> resources/views/mail/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y el fichero:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">touch</span> resources/views/mail/alert.blade.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y podemos añadir algo como:</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Alert Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>¡Alerta!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Este es un correo de alerta.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Para indicar que queremos esta vista, escribiremos en <code>app/Mail/AlertMail.php</code>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Content</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Content</span><span class="token punctuation">(</span>
        <span class="token argument-name">view</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;mail.alert&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Luego, pasaremos a configurar la lógica de alerta en la aplicación, donde determinaremos el escenario en el que deseamos enviar una alerta por correo electrónico.</p><p>Por ejemplo, si deseamos enviar una alerta cuando un evento ocurra, podemos agregar la lógica de alerta en el controlador o en el servicio correspondiente:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Mail<span class="token punctuation">\\</span>AlertMail</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Mail</span><span class="token punctuation">;</span>

<span class="token comment">// Dentro de un método de un controlador o servicio</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">sendAlert</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Lógica para determinar cuándo enviar una alerta</span>

    <span class="token comment">// Envío de la alerta por correo electrónico</span>
    <span class="token variable">$recipient</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;recipient@example.com&#39;</span><span class="token punctuation">;</span>
    <span class="token class-name static-context">Mail</span><span class="token operator">::</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token variable">$recipient</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AlertMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dentro de la clase <code>AlertMail</code>, podemos personalizar el contenido del correo electrónico y cualquier otro aspecto relacionado con el envío del correo. Por ejemplo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Bus<span class="token punctuation">\\</span>Queueable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Queue<span class="token punctuation">\\</span>ShouldQueue</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Mail<span class="token punctuation">\\</span>Mailable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Queue<span class="token punctuation">\\</span>SerializesModels</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">AlertMail</span> <span class="token keyword">extends</span> <span class="token class-name">Mailable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Queueable</span><span class="token punctuation">,</span> SerializesModels<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Build the message.
     *
     * <span class="token keyword">@return</span> $this
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;mail.from.address&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">subject</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Alerta Importante&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;emails.alert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>También podemos crear una vista (opcional), si deseamos personalizar el contenido del correo electrónico.</p><p>Utilizando una plantilla Blade, podemos crear una vista en el directorio <code>resources/views/emails</code>. Por ejemplo, creamos un archivo <code>alert.blade.php</code> con el contenido del correo electrónico.</p><p>Para probar el envío de correo electrónico, podemos llamar al método <code>sendAlert</code> que hemos creado anteriormente desde una ruta o un controlador en la aplicación y verificar si el correo electrónico se envía correctamente:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/send-alert&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;App\\Http\\Controllers\\YourController&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sendAlert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>O crear un comando con:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>command TestEmail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y editar el fichero del comando (<code>app/Console/Commands/TestEmail.php</code>) dejándolo algo así:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Commands</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Command</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Mail<span class="token punctuation">\\</span>AlertMail</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Mail</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">TestEmail</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * The name and signature of the console command.
     *
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$signature</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;app:testemail&#39;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The console command description.
     *
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$description</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Send test email&#39;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Execute the console command.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">Mail</span><span class="token operator">::</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AlertMail</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function k(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[s("Para crear un servicio de alertas por correo en Laravel utilizando un servicio externo, como Mailgun, debemos, primero, crear una cuenta en "),n("a",r,[s("Mailgun"),l(a)]),s(".")]),d])}const b=e(i,[["render",k],["__file","correos-filament.html.vue"]]),h=JSON.parse('{"path":"/laravel/correos-filament.html","title":"Envío de correos en FilamentPHP","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1714899027000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"laravel/correos-filament.md"}');export{b as comp,h as data};
