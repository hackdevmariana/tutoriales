import{_ as e,o as a,c as t,d as n}from"./app-kAyB6N1g.js";const s={},i=n(`<h1 id="como-crear-widgets-en-filamentphp" tabindex="-1"><a class="header-anchor" href="#como-crear-widgets-en-filamentphp"><span>Cómo crear widgets en FilamentPHP</span></a></h1><p>Filament viene con una plantilla de widget de &quot;descripción general de estadísticas&quot; (stats overview), que se puede utilizar para mostrar varias estadísticas diferentes en un solo widget, sin necesidad de escribir una vista personalizada.</p><p>Crearemos un widget con el comando:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>filament<span class="token operator">-</span>widget StatsOverview <span class="token operator">--</span>stats<span class="token operator">-</span>overview
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Si queremos crear cualquier tipo de widget disponible y que artisan nos pregunte qué es lo que queremos crear, usaremos:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>filament<span class="token operator">-</span>widget
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),r=[i];function o(d,p){return a(),t("div",null,r)}const c=e(s,[["render",o],["__file","widgets-filament.html.vue"]]),m=JSON.parse('{"path":"/laravel/widgets-filament.html","title":"Cómo crear widgets en FilamentPHP","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1714899027000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"laravel/widgets-filament.md"}');export{c as comp,m as data};
