import{_ as e,o as a,c as n,d as r}from"./app-BeujHZ-P.js";const i={},d=r(`<h1 id="uso-de-nerdtree-en-vi" tabindex="-1"><a class="header-anchor" href="#uso-de-nerdtree-en-vi"><span>Uso de NERDTree en vi</span></a></h1><h2 id="instalacion" tabindex="-1"><a class="header-anchor" href="#instalacion"><span>Instalación</span></a></h2><p>Hay que tener instalado el gestor de complementos <code>Plug</code>. Este es un programa que te permite instalar y actualizar fácilmente los complementos de vi. Para instalarlo, hay que ejecutar este comando:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fLo</span> ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Añadir esto en .vimrc:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>call plug#begin()

Plug &#39;preservim/nerdtree&#39;

call plug#end()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Y, al reiniciar vi, ejecutar el comando <code>:PlugInstall</code> para instalar los complementos que haya en <code>.vimrc</code>, incluyendo <code>nerdtree</code>.</p><h2 id="uso-de-nerdtree" tabindex="-1"><a class="header-anchor" href="#uso-de-nerdtree"><span>Uso de NERDTree</span></a></h2><p>Para activar NERDTree, hay que ejecutar:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>:NERDTreeToggle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Para desactivar <code>NERDTree</code>, puedes usar el mismo comando <code>:NERDTreeToggle</code> o presionar la tecla <code>q</code> cuando el cursor esté en el panel de NERDTree. Esto cerrará el explorador de archivos y volverá a la ventana de edición.</p><p>Si quieres que NERDTree se ejecute automáticamente al iniciar vi, puedes añadir esta línea en tu .vimrc:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>autocmd vimenter * NERDTree
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="cambio-de-ventanas" tabindex="-1"><a class="header-anchor" href="#cambio-de-ventanas"><span>Cambio de ventanas</span></a></h2><p>Para cambiar entre el fichero a editar y el árbol de directorios, puedes usar el atajo de teclado Ctrl + w. Este atajo te permite saltar entre las ventanas abiertas en vi, incluyendo la de NERDTree. Puedes presionar Ctrl + w seguido de una de estas teclas para moverte en la dirección deseada:</p><ul><li><p><code>h</code>: izquierda</p></li><li><p><code>j</code>: abajo</p></li><li><p><code>k</code>: arriba</p></li><li><p><code>l</code>: derecha</p></li></ul><p>Por ejemplo, si quieres ir de la ventana del fichero a la de NERDTree, puedes presionar Ctrl + w y luego h. Si quieres volver a la ventana del fichero, puedes presionar <code>Ctrl + w</code> y luego <code>l</code>.</p>`,17),t=[d];function l(s,o){return a(),n("div",null,t)}const u=e(i,[["render",l],["__file","nerdtree.html.vue"]]),p=JSON.parse('{"path":"/vi/nerdtree.html","title":"Uso de NERDTree en vi","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Instalación","slug":"instalacion","link":"#instalacion","children":[]},{"level":2,"title":"Uso de NERDTree","slug":"uso-de-nerdtree","link":"#uso-de-nerdtree","children":[]},{"level":2,"title":"Cambio de ventanas","slug":"cambio-de-ventanas","link":"#cambio-de-ventanas","children":[]}],"git":{"updatedTime":1710284007000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"vi/nerdtree.md"}');export{u as comp,p as data};
