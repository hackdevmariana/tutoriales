import{_ as n,o as a,c as s,d as e}from"./app-K6z4kWva.js";const t={},o=e(`<h1 id="como-unir-listas-en-python" tabindex="-1"><a class="header-anchor" href="#como-unir-listas-en-python"><span>Cómo unir listas en Python</span></a></h1><p>Hay varias formas de unir dos o más listas en Python.</p><h2 id="usando-el-operador" tabindex="-1"><a class="header-anchor" href="#usando-el-operador"><span>Usando el operador +</span></a></h2><p>Podemos usar el operador <code>+</code> para concatenar dos listas:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lista1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lista2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
lista_unida <span class="token operator">=</span> lista1 <span class="token operator">+</span> lista2
<span class="token keyword">print</span><span class="token punctuation">(</span>lista_unida<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Salida: [1, 2, 3, 4, 5, 6]</p><h2 id="usando-el-metodo-extend" tabindex="-1"><a class="header-anchor" href="#usando-el-metodo-extend"><span>Usando el Método extend()</span></a></h2><p>El método <code>extend()</code> añade los elementos de una lista al final de otra lista:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lista1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lista2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
lista1<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>lista2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lista1<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Salida: [1, 2, 3, 4, 5, 6]</p><h2 id="usando-el-metodo-append-con-desempaquetado-de-listas" tabindex="-1"><a class="header-anchor" href="#usando-el-metodo-append-con-desempaquetado-de-listas"><span>Usando el método append() con desempaquetado de listas</span></a></h2><p>Podemos usar el método <code>append()</code> junto con el operador de desempaquetado <code>*</code>:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lista1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lista2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
lista1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">*</span>lista2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lista1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Salida: [1, 2, 3, 4, 5, 6]</p><h2 id="usando-comprension-de-oistas" tabindex="-1"><a class="header-anchor" href="#usando-comprension-de-oistas"><span>Usando comprensión de oistas</span></a></h2><p>También podemos usar comprensión de listas para unir dos listas:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lista1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lista2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
lista_unida <span class="token operator">=</span> <span class="token punctuation">[</span>elemento <span class="token keyword">for</span> lista <span class="token keyword">in</span> <span class="token punctuation">(</span>lista1<span class="token punctuation">,</span> lista2<span class="token punctuation">)</span> <span class="token keyword">for</span> elemento <span class="token keyword">in</span> lista<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lista_unida<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Salida: [1, 2, 3, 4, 5, 6]</p><h2 id="usando-la-funcion-itertools-chain" tabindex="-1"><a class="header-anchor" href="#usando-la-funcion-itertools-chain"><span>Usando la función itertools.chain()</span></a></h2><p>La función <code>chain()</code> del módulo <code>itertools</code> es otra forma eficiente de unir listas:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> itertools

lista1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
lista2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
lista_unida <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>itertools<span class="token punctuation">.</span>chain<span class="token punctuation">(</span>lista1<span class="token punctuation">,</span> lista2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lista_unida<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Salida: [1, 2, 3, 4, 5, 6]</p>`,22),p=[o];function l(i,c){return a(),s("div",null,p)}const d=n(t,[["render",l],["__file","unir-listas.html.vue"]]),r=JSON.parse('{"path":"/python/unir-listas.html","title":"Cómo unir listas en Python","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Usando el operador +","slug":"usando-el-operador","link":"#usando-el-operador","children":[]},{"level":2,"title":"Usando el Método extend()","slug":"usando-el-metodo-extend","link":"#usando-el-metodo-extend","children":[]},{"level":2,"title":"Usando el método append() con desempaquetado de listas","slug":"usando-el-metodo-append-con-desempaquetado-de-listas","link":"#usando-el-metodo-append-con-desempaquetado-de-listas","children":[]},{"level":2,"title":"Usando comprensión de oistas","slug":"usando-comprension-de-oistas","link":"#usando-comprension-de-oistas","children":[]},{"level":2,"title":"Usando la función itertools.chain()","slug":"usando-la-funcion-itertools-chain","link":"#usando-la-funcion-itertools-chain","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"python/unir-listas.md"}');export{d as comp,r as data};
