import{_ as p,r,o as i,c as t,a as e,e as a,b as s,d as o}from"./app-iqW588Fi.js";const l={},c=o(`<h1 id="personalizar-el-panel-de-control-de-filamentphp" tabindex="-1"><a class="header-anchor" href="#personalizar-el-panel-de-control-de-filamentphp"><span>Personalizar el panel de control de FilamentPHP</span></a></h1><p>Para personalizar el panel de control de FilamentPHP, podemos modificar el archivo de configuración ubicado en <code>app/Providers/Filament/AdminPanelProvider.php</code>.</p><p>Este archivo contiene la configuración para el panel <code>/admin</code>.</p><h2 id="anadir-perfil-del-usuario" tabindex="-1"><a class="header-anchor" href="#anadir-perfil-del-usuario"><span>Añadir perfil del usuario</span></a></h2><p>Para añadir perfil del usuario, en <code>app/Providers/Filament/DashboardPanelProvider.php</code> podemos añadir:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Y nos mostrará una nueva opción en el menú del usuario (parte superior izquierda).</p><h2 id="creacion-de-un-nuevo-panel" tabindex="-1"><a class="header-anchor" href="#creacion-de-un-nuevo-panel"><span>Creación de un nuevo panel</span></a></h2><p>Si deseamos crear un panel completamente nuevo, podemos usar el comando:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>filament<span class="token operator">-</span>panel nombre_del_panel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>donde <code>nombre_del_panel</code> es el nombre único para el nuevo panel.</p><h2 id="cambio-de-ruta" tabindex="-1"><a class="header-anchor" href="#cambio-de-ruta"><span>Cambio de ruta</span></a></h2><p>En el archivo de configuración del panel, podemos cambiar la ruta de acceso utilizando el método <code>path()</code> para especificar una nueva ruta.</p><h2 id="ganchos-de-renderizado-render-hooks" tabindex="-1"><a class="header-anchor" href="#ganchos-de-renderizado-render-hooks"><span>Ganchos de renderizado (Render Hooks)</span></a></h2><p>Para personalizar aún más, podemos usar los ganchos de renderizado para insertar contenido Blade en puntos específicos de las vistas de Filament.</p>`,15),d={href:"https://filamentphp.com/docs/3.x/panels/configuration",target:"_blank",rel:"noopener noreferrer"},u=o('<h2 id="tema-personalizado" tabindex="-1"><a class="header-anchor" href="#tema-personalizado"><span>Tema personalizado</span></a></h2><p>Para cambiar el fondo del panel, podemos crear un tema personalizado y editar el CSS.</p><p>Por ejemplo, para cambiar el fondo globalmente, podemos usar la clase <code>.fi-body</code>.</p><h2 id="cambiar-la-tipografia" tabindex="-1"><a class="header-anchor" href="#cambiar-la-tipografia"><span>Cambiar la tipografía</span></a></h2><p>Por defecto, Filament utiliza la fuente <code>Inter</code>, pero podemos cambiarla utilizando el método <code>font()</code> en el archivo de configuración.</p>',5),m={href:"https://filamentphp.com/docs/3.x/panels/themes",target:"_blank",rel:"noopener noreferrer"},h=o(`<h2 id="crear-un-tema-personalizado" tabindex="-1"><a class="header-anchor" href="#crear-un-tema-personalizado"><span>Crear un tema personalizado</span></a></h2><p>Filament permite cambiar el CSS utilizado para renderizar la UI compilando una hoja de estilo personalizada para reemplazar la predeterminada.</p><p>Para crear un tema personalizado para un panel, podemos usar el comando:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>php artisan make<span class="token punctuation">:</span>filament<span class="token operator">-</span>theme nombre_del_tema
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="modificar-el-proveedor-de-la-tipografia" tabindex="-1"><a class="header-anchor" href="#modificar-el-proveedor-de-la-tipografia"><span>Modificar el proveedor de la tipografía</span></a></h2><p>Si deseamos usar Google Fonts CDN en lugar de Bunny Fonts CDN, que es el predeterminado y cumple con el GDPR, podemos hacerlo usando el argumento <code>provider</code> del método <code>font()</code>.</p><h2 id="hooks-de-vista" tabindex="-1"><a class="header-anchor" href="#hooks-de-vista"><span>Hooks de vista</span></a></h2><p>También podemos crear una vista y renderizar un hook añadiendo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token operator">-&gt;</span><span class="token function">renderHook</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;panels::body.start&#39;</span><span class="token punctuation">,</span> <span class="token keyword">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">View</span> <span class="token operator">=&gt;</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filament.hooks.background&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>a <code>PanelProvider</code>.</p><p>Después de crear un nuevo archivo de configuración para un panel, debemos registrarlo en <code>bootstrap/providers.php</code> (Laravel 11 y superior) o en <code>config/app.php</code> (Laravel 10 e inferior).</p><h2 id="cambiar-colores" tabindex="-1"><a class="header-anchor" href="#cambiar-colores"><span>Cambiar colores</span></a></h2><p>Para cambiar los colores en FilamentPHP, podemos personalizar la paleta de colores predeterminada utilizando el método <code>FilamentColor::register()</code> en el método <code>boot()</code> de un proveedor de servicios o en un middleware.</p><p>Primero, debemos registrar los colores personalizados que se utilizarán en los elementos de la UI de Filament.</p><p>Por ejemplo:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Filament<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>FilamentColor</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Filament<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Colors<span class="token punctuation">\\</span>Color</span><span class="token punctuation">;</span>

<span class="token class-name static-context">FilamentColor</span><span class="token operator">::</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
<span class="token string single-quoted-string">&#39;danger&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">Color</span><span class="token operator">::</span><span class="token constant">Red</span><span class="token punctuation">,</span>
<span class="token string single-quoted-string">&#39;success&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">Color</span><span class="token operator">::</span><span class="token constant">Green</span><span class="token punctuation">,</span>
<span class="token comment">// otros colores...</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Si queremos usar colores personalizados que no están incluidos en la paleta de colores de Tailwind CSS, podemos pasar un array de tonos de color en formato RGB:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token class-name static-context">FilamentColor</span><span class="token operator">::</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token string single-quoted-string">&#39;danger&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token number">50</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;254, 242, 242&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// otros tonos...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>También podemos generar una paleta de colores personalizada a partir de un código hexadecimal o un valor RGB utilizando los métodos <code>Color::hex()</code> o <code>Color::rgb()</code>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token class-name static-context">FilamentColor</span><span class="token operator">::</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token string single-quoted-string">&#39;danger&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">Color</span><span class="token operator">::</span><span class="token function">hex</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;#ff0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Los seis colores predeterminados que se utilizan en Filament son:</p><p>-Primary: Color principal que se utiliza en botones, enlaces y otros elementos destacados.</p><p>-Success: Color utilizado para indicar éxito o una acción positiva.</p><p>-Danger: Color utilizado para alertas o acciones que requieren atención.</p><p>-Warning: Color utilizado para advertencias o precauciones.</p><p>-Info: Color utilizado para información general o mensajes.</p><p>-Gray: Color neutro utilizado para fondos, bordes y otros elementos.</p><p>Estos colores se mapean a clases de Tailwind en el archivo de configuración y pueden personalizarse según las necesidades de cada proyecto.</p>`,28),v={href:"https://filamentphp.com/docs/3.x/support/colors",target:"_blank",rel:"noopener noreferrer"};function k(g,f){const n=r("ExternalLinkIcon");return i(),t("div",null,[c,e("p",null,[a("Por ejemplo, podemos registrar ganchos de renderizado que son específicos para un panel. Más información en "),e("a",d,[a("https://filamentphp.com/docs/3.x/panels/configuration"),s(n)]),a(".")]),u,e("p",null,[a("Más información en "),e("a",m,[a("https://filamentphp.com/docs/3.x/panels/themes"),s(n)])]),h,e("p",null,[a("Más información sobre colores: "),e("a",v,[a("https://filamentphp.com/docs/3.x/support/colors"),s(n)])])])}const z=p(l,[["render",k],["__file","personalizar-filament.html.vue"]]),x=JSON.parse('{"path":"/laravel/personalizar-filament.html","title":"Personalizar el panel de control de FilamentPHP","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Añadir perfil del usuario","slug":"anadir-perfil-del-usuario","link":"#anadir-perfil-del-usuario","children":[]},{"level":2,"title":"Creación de un nuevo panel","slug":"creacion-de-un-nuevo-panel","link":"#creacion-de-un-nuevo-panel","children":[]},{"level":2,"title":"Cambio de ruta","slug":"cambio-de-ruta","link":"#cambio-de-ruta","children":[]},{"level":2,"title":"Ganchos de renderizado (Render Hooks)","slug":"ganchos-de-renderizado-render-hooks","link":"#ganchos-de-renderizado-render-hooks","children":[]},{"level":2,"title":"Tema personalizado","slug":"tema-personalizado","link":"#tema-personalizado","children":[]},{"level":2,"title":"Cambiar la tipografía","slug":"cambiar-la-tipografia","link":"#cambiar-la-tipografia","children":[]},{"level":2,"title":"Crear un tema personalizado","slug":"crear-un-tema-personalizado","link":"#crear-un-tema-personalizado","children":[]},{"level":2,"title":"Modificar el proveedor de la tipografía","slug":"modificar-el-proveedor-de-la-tipografia","link":"#modificar-el-proveedor-de-la-tipografia","children":[]},{"level":2,"title":"Hooks de vista","slug":"hooks-de-vista","link":"#hooks-de-vista","children":[]},{"level":2,"title":"Cambiar colores","slug":"cambiar-colores","link":"#cambiar-colores","children":[]}],"git":{"updatedTime":1715763058000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"laravel/personalizar-filament.md"}');export{z as comp,x as data};
