import{_ as n,o as a,c as s,d as e}from"./app-DmRi4eNh.js";const t={},p=e(`<h1 id="escribir-en-una-imagen-con-php" tabindex="-1"><a class="header-anchor" href="#escribir-en-una-imagen-con-php"><span>Escribir en una imagen con PHP</span></a></h1><p>Para escribir texto en una imagen con <code>PHP</code>, podemos usar la función <code>imagettftext()</code>, que permite agregar texto utilizando fuentes TrueType.</p><p>Seguiremos los siguientes pasos:</p><ul><li><p>Crear o cargar una imagen existente. Podemos usar <code>imagecreate(400, 200)</code> para crear una imagen de 400x200 píxeles.</p></li><li><p>Asignar los colores a usar para el texto y el fondo. <code>imagecolorallocate()</code> asigna colores para el fondo y el texto.</p></li><li><p>Escribir el texto en la imagen. <code>imagettftext()</code> escribe el texto en la imagen usando la tipografía especificada.</p></li><li><p>Guardar o mostrar la imagen. <code>imagepng()</code> guarda la imagen como un archivo PNG.</p></li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$image</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$background_color</span> <span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Blanco</span>
<span class="token variable">$text_color</span> <span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Negro</span>

<span class="token variable">$font_path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;path/to/font.ttf&#39;</span><span class="token punctuation">;</span>

<span class="token variable">$text</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Hola, mundo!&quot;</span><span class="token punctuation">;</span>

<span class="token function">imagettftext</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token variable">$text_color</span><span class="token punctuation">,</span> <span class="token variable">$font_path</span><span class="token punctuation">,</span> <span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;imagen_con_texto.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(i,l){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","escribir.html.vue"]]),d=JSON.parse('{"path":"/php/imagenes/escribir.html","title":"Escribir en una imagen con PHP","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"php/imagenes/escribir.md"}');export{r as comp,d as data};
