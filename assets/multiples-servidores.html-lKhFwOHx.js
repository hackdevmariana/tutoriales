import{_ as e,o as s,c as a,d as n}from"./app-BeujHZ-P.js";const o={},r=n(`<h1 id="trabajar-con-multiples-servidores-en-vue-vuepress" tabindex="-1"><a class="header-anchor" href="#trabajar-con-multiples-servidores-en-vue-vuepress"><span>Trabajar con múltiples servidores en Vue / VuePress</span></a></h1><p>Podemos estar trabajando en un proyecto con Vue y, a la vez, documentando con VuePress.</p><p>Si es así, puede que necesitemos trabajar con varios servidores, uno para ejecutar el proyecto Vue y otro para la documentación en VuePress.</p><p>Tendríamos una opción, que sería ejecutar individualmente cada servidor con el <em>flag</em> <code>--port</code> e indicar el servidor:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run docs:dev <span class="token parameter variable">--port</span> <span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Pero es más sencillo modificar los scripts en el archivo package.json de cada proyecto para asignar puertos específicos al ejecutar los servidores de desarrollo.</p><p>Por ejemplo, para Vue, el script de inicio en <code>package.json</code> podría tener algo así:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service serve --port 8080&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Y para VuePress, el archivo <code>package.json</code>, podría tener algo como:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev docs --port 8081&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build docs&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>De esta manera, al ejecutar <code>npm run serve</code> en el proyecto Vue, utilizará el puerto 8080, y al correr <code>npm run docs:dev</code> en el proyecto VuePress, se lanzará en el puerto 8081.</p><p>Esto permitirá tener ambos servidores ejecutándose al mismo tiempo sin conflictos.</p>`,12),t=[r];function i(p,c){return s(),a("div",null,t)}const d=e(o,[["render",i],["__file","multiples-servidores.html.vue"]]),u=JSON.parse('{"path":"/vue/multiples-servidores.html","title":"Trabajar con múltiples servidores en Vue / VuePress","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1708298085000,"contributors":[{"name":"fernando","email":"fernando@juandemariana.org","commits":1}]},"filePathRelative":"vue/multiples-servidores.md"}');export{d as comp,u as data};
