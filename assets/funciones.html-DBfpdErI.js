import{_ as n,o as a,c as s,d as e}from"./app-PEShm6SM.js";const o={},t=e(`<h1 id="trabajar-con-funciones-en-php" tabindex="-1"><a class="header-anchor" href="#trabajar-con-funciones-en-php"><span>Trabajar con funciones en PHP</span></a></h1><p>La estructura básica de una función en PHP se compone de la palabra reservada <code>function</code> y, entre paréntesis, los parámetros con los que va a trabajar la función.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">myFunction</span><span class="token punctuation">(</span><span class="token variable">$arg_1</span><span class="token punctuation">,</span> <span class="token variable">$arg_2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$arg_1</span> <span class="token operator">+</span> <span class="token variable">$arg_2</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Para llamar a la función, simplemente indicamos el nombre de la función con los valores que le enviamos como parámetros entre paréntesis:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Devolverá 15.</p><h2 id="envio-de-listas-como-parametro" tabindex="-1"><a class="header-anchor" href="#envio-de-listas-como-parametro"><span>Envío de listas como parámetro</span></a></h2><p>No sólo podemos enviar como parámetro variables simples, sino que también podemos usar listas.</p><p>En este ejemplo, <code>$conditions</code> será un array con los valores que le pasemos e cada condición en una línea distinta:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">myFunction</span><span class="token punctuation">(</span><span class="token variable">$conditions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$conditions</span> <span class="token keyword">as</span> <span class="token variable">$condition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$condition</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Llamar a la función pasando un array como parámetro:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$item</span> <span class="token operator">=</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;condition_1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;condition_2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),p=[t];function i(c,l){return a(),s("div",null,p)}const u=n(o,[["render",i],["__file","funciones.html.vue"]]),d=JSON.parse('{"path":"/php/funciones.html","title":"Trabajar con funciones en PHP","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Envío de listas como parámetro","slug":"envio-de-listas-como-parametro","link":"#envio-de-listas-como-parametro","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"php/funciones.md"}');export{u as comp,d as data};
