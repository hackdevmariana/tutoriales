import{_ as a,o as e,c as s,d as n}from"./app-CpmHiPNU.js";const o={},l=n(`<h1 id="uso-de-variables-en-css" tabindex="-1"><a class="header-anchor" href="#uso-de-variables-en-css"><span>Uso de variables en CSS</span></a></h1><p>Las variables en CSS, también conocidas como propiedades personalizadas, son una herramienta que permite almacenar y reutilizar valores en un documento CSS.</p><p>Usar variables ofrece varias ventajas:</p><ul><li><p><strong>Reutilización</strong>: Permite definir un valor una vez y reutilizarlo en múltiples lugares, lo que facilita la gestión y el mantenimiento del código.</p></li><li><p><strong>Consistencia</strong>: Ayuda a mantener la consistencia en el diseño, ya que permite cambiar un valor en un solo lugar y se actualizará en todas partes donde se use.</p></li><li><p><strong>Flexibilidad</strong>: Las variables pueden ser modificadas con JavaScript, lo que permite crear temas dinámicos y personalizables.</p></li></ul><h2 id="declaracion-de-variables" tabindex="-1"><a class="header-anchor" href="#declaracion-de-variables"><span>Declaración de variables</span></a></h2><p>Para declarar una variable en CSS, utilizamos dos guiones seguidos del nombre de la variable, y luego asignamos un valor. Por ejemplo:</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">--main-color</span><span class="token punctuation">:</span> #3498db<span class="token punctuation">;</span>
  <span class="token property">--secondary-color</span><span class="token punctuation">:</span> #2ecc71<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este ejemplo, <code>--main-color</code> y <code>--secondary-color</code> son variables que almacenan colores específicos.</p><h2 id="uso-de-variables" tabindex="-1"><a class="header-anchor" href="#uso-de-variables"><span>Uso de variables</span></a></h2><p>Para usar una variable, empleamos la función <code>var()</code>.</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--main-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--secondary-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este caso, el color de fondo del cuerpo del documento será <code>#3498db</code> y el color del texto será <code>#2ecc71</code>.</p>`,12),i=[l];function c(r,t){return e(),s("div",null,i)}const p=a(o,[["render",c],["__file","variables.html.vue"]]),u=JSON.parse('{"path":"/css/variables.html","title":"Uso de variables en CSS","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Declaración de variables","slug":"declaracion-de-variables","link":"#declaracion-de-variables","children":[]},{"level":2,"title":"Uso de variables","slug":"uso-de-variables","link":"#uso-de-variables","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"css/variables.md"}');export{p as comp,u as data};
